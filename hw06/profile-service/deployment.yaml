---
apiVersion: v1
kind: Namespace
metadata:
  name: default
  labels:
    istio-injection: enabled # Включаем инжект сайдкаров Istio для неймспейса

---
apiVersion: v1
kind: Service
metadata:
  name: java-app
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 80
      nodePort: 32081
      targetPort: 8080
      name: "http" # Istio требует явного указания протокола при определенных настройках
  selector:
    app: proxy-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-deployment-v1
  labels:
    app: java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java
  template:
    metadata:
      labels:
        app: java
        version: v1
    spec:
      containers:
        - name: java-v1
          image: 17709729/otus-microservice:hw04
          env:
            - name: DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: pg-configmap
                  key: DATASOURCE_URL
            - name: DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: pg-configmap
                  key: DATASOURCE_USERNAME
            - name: DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: postgres-password
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-deployment-v2
  labels:
    app: java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java
  template:
    metadata:
      labels:
        app: java
        version: v2
    spec:
      containers:
        - name: java-v2
          image: 17709729/otus-microservice:hw04
          env:
            - name: DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: pg-configmap
                  key: DATASOURCE_URL
            - name: DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: pg-configmap
                  key: DATASOURCE_USERNAME
            - name: DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: postgres-password
          ports:
            - containerPort: 8080